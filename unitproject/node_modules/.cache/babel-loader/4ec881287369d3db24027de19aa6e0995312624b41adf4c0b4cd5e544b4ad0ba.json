{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Allen\\\\Videos\\\\Unit 4 - Javascript\\\\React Project\\\\unitproject\\\\src\\\\App.js\";\nimport Navbar from './Navbar';\nimport Travel from './Travel';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  // state = {\n  // \twordToShow : [test],\n  //   }\n\n  // componentDidMount(){\n  // \tthis.changeWordToShow()\n  // }\n\n  const ChangeWordToShow = () => {\n    _s();\n    const [word] = useState([]);\n    useEffect(() => {\n      fetch('https://jsonplaceholder.typicode.com/photos').then(res => {\n        return res.json();\n      }).then(data => {\n        console.log(data);\n        setPhotos(data);\n      });\n    }, []);\n    fetch('https://random-word-api.herokuapp.com/word?').then(response => {\n      response.json();\n    }).then(data => {\n      // Work with JSON data here\n      console.log(data);\n    }).catch(err => {\n      // Do something for an error here\n      console.log(\"Error Reading data \" + err);\n    });\n  };\n  _s(ChangeWordToShow, \"9d3chjdAHyCLTnDG3+jm8V+1T+c=\");\n  return (\n    /*#__PURE__*/\n    // <View style={Styles.container}>\n    // <Text style={Styles.paragraph}>\n    // {this.state.wordToShow[0]}\n    // </Text>\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => changeWordToShow(),\n      children: \"Change Word \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n\n    // </View>\n  );\n}\n_c = App;\nexport default App;\n\n/*let component\nswitch (window.location.pathname) {\n\tcase \"/\":\n\t\tcomponent = <Home />\n\t\tbreak\n\tcase \"/travel\":\n\t\tcomponent = <Travel />\n\t\tbreak\n\tcase \"/about\":\n\t\tcomponent = <About />\n\t\tbreak\n\tdefault:\n\t\tbreak\n\t}\n\treturn (\n\t<>\n\t\t<Navbar />\n\t\t{component}\n\t</>\n\t\n\t\t\n);*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Travel","About","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","ChangeWordToShow","word","useState","useEffect","fetch","then","res","json","data","console","log","setPhotos","response","catch","err","type","onClick","changeWordToShow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jacob Allen/Videos/Unit 4 - Javascript/React Project/unitproject/src/App.js"],"sourcesContent":["import Navbar from './Navbar'\nimport Travel from './Travel'\nimport About from './About'\n\n\n\n\n\nfunction App() {\n\t\n\t// state = {\n\t// \twordToShow : [test],\n\t//   }\n\n\t// componentDidMount(){\n\t// \tthis.changeWordToShow()\n\t// }\n\n\tconst ChangeWordToShow= () =>{\n\t\tconst [word] = useState([]);\n\t\tuseEffect(() => {\n\t\t  fetch('https://jsonplaceholder.typicode.com/photos')\n\t\t\t.then((res) => {\n\t\t\t  return res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t  console.log(data);\n\t\t\t  setPhotos(data);\n\t\t\t});\n\t\t}, []);\n\tfetch('https://random-word-api.herokuapp.com/word?')\n\t.then((response) => {\n\t\tresponse.json()})\n\t.then(data => {\n\t\t// Work with JSON data here\n\t\tconsole.log(data)\n\t}).catch(err => {\n\t\t// Do something for an error here\n\t\tconsole.log(\"Error Reading data \" + err);\n\t});\n\t}\n\t  \n\treturn (\n\t\t// <View style={Styles.container}>\n\t\t// <Text style={Styles.paragraph}>\n\t\t// {this.state.wordToShow[0]}\n\t\t// </Text>\n\n\t\t<button type= \"button\" onClick={()=>changeWordToShow()}>Change Word </button>\n\t\n\t\t// </View>\n\t);\n\t}\n\n\n\texport default App;\n\t\n\t  \n\t\n\n\n\t/*let component\n\tswitch (window.location.pathname) {\n\t\tcase \"/\":\n\t\t\tcomponent = <Home />\n\t\t\tbreak\n\t\tcase \"/travel\":\n\t\t\tcomponent = <Travel />\n\t\t\tbreak\n\t\tcase \"/about\":\n\t\t\tcomponent = <About />\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t{component}\n\t\t</>\n\t\t\n\n\t\t\n\t);*/\n\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAM3B,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEd;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAEA,CAAA,KAAK;IAAAF,EAAA;IAC5B,MAAM,CAACG,IAAI,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;IAC3BC,SAAS,CAAC,MAAM;MACdC,KAAK,CAAC,6CAA6C,CAAC,CACpDC,IAAI,CAAEC,GAAG,IAAK;QACb,OAAOA,GAAG,CAACC,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBG,SAAS,CAACH,IAAI,CAAC;MACjB,CAAC,CAAC;IACH,CAAC,EAAE,EAAE,CAAC;IACPJ,KAAK,CAAC,6CAA6C,CAAC,CACnDC,IAAI,CAAEO,QAAQ,IAAK;MACnBA,QAAQ,CAACL,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CACjBF,IAAI,CAACG,IAAI,IAAI;MACb;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAClB,CAAC,CAAC,CAACK,KAAK,CAACC,GAAG,IAAI;MACf;MACAL,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGI,GAAG,CAAC;IACzC,CAAC,CAAC;EACF,CAAC;EAAAhB,EAAA,CAtBKE,gBAAgB;EAwBtB;IAAA;IACC;IACA;IACA;IACA;IAEAJ,OAAA;MAAQmB,IAAI,EAAE,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAIC,gBAAgB,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;;IAE5E;EAAA;AAED;AAACC,EAAA,GA5CO1B,GAAG;AA+CX,eAAeA,GAAG;;AAMlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
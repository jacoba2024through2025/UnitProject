{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Allen\\\\Videos\\\\Unit 4 - Javascript\\\\React Project\\\\unitproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from './Navbar';\nimport Travel from './Travel';\nimport About from './About';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wordToShow, setWordToShow] = useState('');\n  // state = {\n  // \twordToShow : [test],\n  //   }\n\n  // componentDidMount(){\n  // \tthis.changeWordToShow()\n  // }\n\n  const changeWordToShow = () => {\n    fetch('https://random-word-api.herokuapp.com/word').then(response => {\n      return response.json();\n    }).then(data => {\n      // Work with JSON data here\n      for (let word of data) {\n        console.log(word);\n        return word;\n      }\n      return data;\n    }).catch(err => {\n      // Do something for an error here\n      console.log(\"Error Reading data \" + err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: changeWordToShow,\n      children: \"Change Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: wordToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9LayOeExJ7syK7K0Ajxu6uJ+UcU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Travel","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wordToShow","setWordToShow","useState","changeWordToShow","fetch","then","response","json","data","word","console","log","catch","err","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jacob Allen/Videos/Unit 4 - Javascript/React Project/unitproject/src/App.js"],"sourcesContent":["import Navbar from './Navbar'\nimport Travel from './Travel'\nimport About from './About'\n\n\n\n\n\nfunction App() {\n\tconst [wordToShow, setWordToShow] = useState('');\n\t// state = {\n\t// \twordToShow : [test],\n\t//   }\n\n\t// componentDidMount(){\n\t// \tthis.changeWordToShow()\n\t// }\n\n\tconst changeWordToShow= () =>{\n\tfetch('https://random-word-api.herokuapp.com/word')\n\t.then((response) => {\n\t\treturn response.json();\n\t\t})\n\t.then(data => {\n\t\t// Work with JSON data here\n\t\tfor(let word of data){\n\t\t\tconsole.log(word)\n\t\t\treturn word;\n\t\t}\n\t\treturn data;\n\t}).catch(err => {\n\t\t// Do something for an error here\n\t\tconsole.log(\"Error Reading data \" + err);\n\t});\n\t}\n\t  \n\treturn (\n\t\t<>\n            <button type=\"button\" onClick={changeWordToShow}>\n                Change Word\n            </button>\n            <p>{wordToShow}</p>\n            <Navbar />\n            {/* You can add Travel and About components here if needed */}\n        </>\n\t);\n\t}\n\n\n\texport default App;\n\t\n\t  \n\t\n\n\n\t\n\n\t\n\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAEA,CAAA,KAAK;IAC7BC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACFF,IAAI,CAACG,IAAI,IAAI;MACb;MACA,KAAI,IAAIC,IAAI,IAAID,IAAI,EAAC;QACpBE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,OAAOA,IAAI;MACZ;MACA,OAAOD,IAAI;IACZ,CAAC,CAAC,CAACI,KAAK,CAACC,GAAG,IAAI;MACf;MACAH,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGE,GAAG,CAAC;IACzC,CAAC,CAAC;EACF,CAAC;EAED,oBACClB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACUnB,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEb,gBAAiB;MAAAW,QAAA,EAAC;IAEjD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTzB,OAAA;MAAAmB,QAAA,EAAId;IAAU;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAEZ,CAAC;AAEV;AAACrB,EAAA,CAtCOD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAyCX,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zombi\\\\Desktop\\\\React Project\\\\UnitProject\\\\unitproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Message from './components/Message';\nimport Wordle from './components/Wordle';\nimport useGame from './useGame';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //wordSolution is the random solution for each game the user wants to play\n  const [wordSolution, setWord] = useState('');\n  const changeWordToShow = () => {\n    fetch('https://random-word-api.herokuapp.com/word').then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.length > 0) {\n        for (let word of data) {\n          setWord(word);\n          break;\n        }\n      }\n    }).catch(err => {\n      console.log(\"Error \" + err);\n    });\n  };\n  useEffect(() => {\n    changeWordToShow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), wordSolution && /*#__PURE__*/_jsxDEV(Wordle, {\n      wordSolution: wordSolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"solution-length\",\n        children: [\"Length: \", wordSolution.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yiG8UJlVAiQV/tz49vVDbZsk9nE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Message","Wordle","useGame","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wordSolution","setWord","changeWordToShow","fetch","then","response","json","data","length","word","catch","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/zombi/Desktop/React Project/UnitProject/unitproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Message from './components/Message'\r\nimport Wordle from './components/Wordle'\r\nimport useGame from './useGame';\r\n\r\n\r\n\r\nfunction App() {\r\n\t//wordSolution is the random solution for each game the user wants to play\r\n\tconst [wordSolution, setWord] = useState('')\r\n\t\r\n\t\r\n\t\t\r\n\tconst changeWordToShow= () =>{\r\n\tfetch('https://random-word-api.herokuapp.com/word')\r\n\t.then((response) => {\r\n\t\treturn response.json();\r\n\t\t})\r\n\t.then(data => {\r\n\t\tif (data.length > 0) {\r\n\t\t\tfor(let word of data){\r\n\t\t\t\tsetWord(word);\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}).catch(err => {\r\n\t\t\r\n\t\tconsole.log(\"Error \" + err);\r\n\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n        changeWordToShow();\r\n    }, []);\r\n\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Message />\r\n\t\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\t<div className='flex-container'>\r\n\t\t\t\t<div className='solution-length'>\r\n\t\t\t\t\tLength: {wordSolution.length}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t</>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t);\r\n}\r\n\r\n\r\n\texport default App;\r\n\t\r\n\t  \r\n\t\r\n\r\n\r\n\t\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,YAAY,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAI5C,MAAMc,gBAAgB,GAAEA,CAAA,KAAK;IAC7BC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACFF,IAAI,CAACG,IAAI,IAAI;MACb,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACpB,KAAI,IAAIC,IAAI,IAAIF,IAAI,EAAC;UACpBN,OAAO,CAACQ,IAAI,CAAC;UAEb;QAED;MACD;IAGD,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MAEfC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGF,GAAG,CAAC;IAC5B,CAAC,CAAC;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACTa,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAIT,oBACCP,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACCnB,OAAA,CAACL,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA,CAACJ,OAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACVlB,YAAY,iBAAIL,OAAA,CAACH,MAAM;MAACQ,YAAY,EAAEA;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC9BnB,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAL,QAAA,GAAC,UACxB,EAACd,YAAY,CAACQ,MAAM;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eAKL,CAAC;AAOL;AAACnB,EAAA,CAxDQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA2DX,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
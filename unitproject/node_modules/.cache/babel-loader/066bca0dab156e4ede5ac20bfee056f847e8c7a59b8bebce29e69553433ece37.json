{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zombi\\\\Desktop\\\\React Project\\\\UnitProject\\\\unitproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Wordle from './components/Wordle';\nimport useGame from './hooks/useGame';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //wordSolution is the random solution for each game the user wants to play\n  const [wordSolution, setWord] = useState('');\n  const {\n    resetGame\n  } = useGame(word);\n  const changeWordToShow = () => {\n    fetch('https://random-word-api.herokuapp.com/word').then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.length > 0) {\n        for (let word of data) {\n          setWord(word);\n          break;\n        }\n      }\n    }).catch(err => {\n      console.log(\"Error \" + err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => changeWordToShow(),\n      children: \"Change Word \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), wordSolution && /*#__PURE__*/_jsxDEV(Wordle, {\n      wordSolution: wordSolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), \"Word name: \", wordSolution, \" Length: \", wordSolution.length]\n  }, void 0, true);\n}\n_s(App, \"9zxQ8AxYeWg9/ACjC1dzwXzWieM=\", false, function () {\n  return [useGame];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Wordle","useGame","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wordSolution","setWord","resetGame","word","changeWordToShow","fetch","then","response","json","data","length","catch","err","console","log","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zombi/Desktop/React Project/UnitProject/unitproject/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Wordle from './components/Wordle'\r\nimport useGame from './hooks/useGame'\r\n\r\n\r\n\r\nfunction App() {\r\n\t//wordSolution is the random solution for each game the user wants to play\r\n\tconst [wordSolution, setWord] = useState('')\r\n\tconst {resetGame} = useGame(word)\r\n\t\t\r\n\tconst changeWordToShow= () =>{\r\n\tfetch('https://random-word-api.herokuapp.com/word')\r\n\t.then((response) => {\r\n\t\treturn response.json();\r\n\t\t})\r\n\t.then(data => {\r\n\t\tif (data.length > 0) {\r\n\t\t\tfor(let word of data){\r\n\t\t\t\tsetWord(word);\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}).catch(err => {\r\n\t\t\r\n\t\tconsole.log(\"Error \" + err);\r\n\t});\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button type= \"button\" onClick={()=>changeWordToShow()}>Change Word </button>\r\n\t\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\tWord name: {wordSolution} Length: {wordSolution.length}\r\n\t\t\t\r\n\t\t</>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t);\r\n}\r\n\r\n\r\n\texport default App;\r\n\t\r\n\t  \r\n\t\r\n\r\n\r\n\t\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIrC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,YAAY,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACW;EAAS,CAAC,GAAGT,OAAO,CAACU,IAAI,CAAC;EAEjC,MAAMC,gBAAgB,GAAEA,CAAA,KAAK;IAC7BC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACFF,IAAI,CAACG,IAAI,IAAI;MACb,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACpB,KAAI,IAAIP,IAAI,IAAIM,IAAI,EAAC;UACpBR,OAAO,CAACE,IAAI,CAAC;UAEb;QAED;MACD;IAGD,CAAC,CAAC,CAACQ,KAAK,CAACC,GAAG,IAAI;MAEfC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGF,GAAG,CAAC;IAC5B,CAAC,CAAC;EACF,CAAC;EAED,oBACCjB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACCpB,OAAA;MAAQqB,IAAI,EAAE,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAIb,gBAAgB,CAAC,CAAE;MAAAW,QAAA,EAAC;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5ErB,YAAY,iBAAIL,OAAA,CAACH,MAAM;MAACQ,YAAY,EAAEA;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAE,aAC9C,EAACrB,YAAY,EAAC,WAAS,EAACA,YAAY,CAACU,MAAM;EAAA,eAErD,CAAC;AAOL;AAACX,EAAA,CAxCQD,GAAG;EAAA,QAGSL,OAAO;AAAA;AAAA6B,EAAA,GAHnBxB,GAAG;AA2CX,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Allen\\\\Videos\\\\Unit 4 - Javascript\\\\React Project\\\\unitproject\\\\src\\\\App.js\";\nimport Navbar from './Navbar';\nimport Travel from './Travel';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet component;\nswitch (window.location.pathname) {\n  case \"/\":\n    component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n    break;\n  case \"/travel\":\n    component = /*#__PURE__*/_jsxDEV(Travel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n    break;\n  case \"/about\":\n    component = /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n    break;\n  default:\n    break;\n}\nfunction App() {\n  // state = {\n  // \twordToShow : [test],\n  //   }\n\n  // componentDidMount(){\n  // \tthis.changeWordToShow()\n  // }\n\n  const changeWordToShow = () => {\n    fetch('https://random-word-api.herokuapp.com/word').then(response => {\n      return response.json();\n    }).then(data => {\n      // Work with JSON data here\n      for (let word of data) {\n        console.log(word);\n        return word;\n      }\n      return data;\n    }).catch(err => {\n      // Do something for an error here\n      console.log(\"Error Reading data \" + err);\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // <View style={Styles.container}>\n    // <Text style={Styles.paragraph}>\n    // {this.state.wordToShow[0]}\n    // </Text>\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => changeWordToShow(),\n      children: \"Change Word \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)\n\n    // </View>\n  );\n}\n_c = App;\nexport default App;\n\n/*\n\treturn (\n\t\n\t\n\t\t\n);*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Travel","About","jsxDEV","_jsxDEV","component","window","location","pathname","Home","fileName","_jsxFileName","lineNumber","columnNumber","App","changeWordToShow","fetch","then","response","json","data","word","console","log","catch","err","type","onClick","children","_c","$RefreshReg$"],"sources":["C:/Users/Jacob Allen/Videos/Unit 4 - Javascript/React Project/unitproject/src/App.js"],"sourcesContent":["import Navbar from './Navbar'\nimport Travel from './Travel'\nimport About from './About'\n\n\nlet component\n\tswitch (window.location.pathname) {\n\t\tcase \"/\":\n\t\t\tcomponent = <Home />\n\t\t\tbreak\n\t\tcase \"/travel\":\n\t\t\tcomponent = <Travel />\n\t\t\tbreak\n\t\tcase \"/about\":\n\t\t\tcomponent = <About />\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\n\t}\n\n\nfunction App() {\n\t\n\t// state = {\n\t// \twordToShow : [test],\n\t//   }\n\n\t// componentDidMount(){\n\t// \tthis.changeWordToShow()\n\t// }\n\n\tconst changeWordToShow= () =>{\n\tfetch('https://random-word-api.herokuapp.com/word')\n\t.then((response) => {\n\t\treturn response.json();\n\t\t})\n\t.then(data => {\n\t\t// Work with JSON data here\n\t\tfor(let word of data){\n\t\t\tconsole.log(word)\n\t\t\treturn word;\n\t\t}\n\t\treturn data;\n\t}).catch(err => {\n\t\t// Do something for an error here\n\t\tconsole.log(\"Error Reading data \" + err);\n\t});\n\t}\n\t  \n\treturn (\n\t\t// <View style={Styles.container}>\n\t\t// <Text style={Styles.paragraph}>\n\t\t// {this.state.wordToShow[0]}\n\t\t// </Text>\n\t\t\n\t\t<button type= \"button\" onClick={()=>changeWordToShow()}>Change Word </button>\n\t\t\n\t\n\t\t// </View>\n\t);\n\t}\n\n\n\texport default App;\n\t\n\t  \n\t\n\n\n\t/*\n\n\treturn (\n\t\t\n\t\t\n\n\t\t\n\t);*/\n\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3B,IAAIC,SAAS;AACZ,QAAQC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EAC/B,KAAK,GAAG;IACPH,SAAS,gBAAGD,OAAA,CAACK,IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACpB;EACD,KAAK,SAAS;IACbR,SAAS,gBAAGD,OAAA,CAACH,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACtB;EACD,KAAK,QAAQ;IACZR,SAAS,gBAAGD,OAAA,CAACF,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACrB;EACD;IACC;AAEF;AAGD,SAASC,GAAGA,CAAA,EAAG;EAEd;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,gBAAgB,GAAEA,CAAA,KAAK;IAC7BC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACtB,CAAC,CAAC,CACFF,IAAI,CAACG,IAAI,IAAI;MACb;MACA,KAAI,IAAIC,IAAI,IAAID,IAAI,EAAC;QACpBE,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,OAAOA,IAAI;MACZ;MACA,OAAOD,IAAI;IACZ,CAAC,CAAC,CAACI,KAAK,CAACC,GAAG,IAAI;MACf;MACAH,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAGE,GAAG,CAAC;IACzC,CAAC,CAAC;EACF,CAAC;EAED;IAAA;IACC;IACA;IACA;IACA;IAEArB,OAAA;MAAQsB,IAAI,EAAE,QAAQ;MAACC,OAAO,EAAEA,CAAA,KAAIZ,gBAAgB,CAAC,CAAE;MAAAa,QAAA,EAAC;IAAY;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;;IAG5E;EAAA;AAED;AAACgB,EAAA,GAvCOf,GAAG;AA0CX,eAAeA,GAAG;;AAMlB;AACD;AACA;AACA;AACA;AACA;AALC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
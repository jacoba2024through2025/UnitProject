{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zombi\\\\Desktop\\\\React Project\\\\UnitProject\\\\unitproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*import React, { useState,useEffect} from 'react'\r\nimport Navbar from './Navbar'\r\nimport Message from './components/Message'\r\nimport Wordle from './components/Wordle'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\t//wordSolution is the random solution for each game the user wants to play\r\n\tconst [wordSolution, setWord] = useState('')\r\n\t\r\n\tvar url = './data_folder/data.json'\r\n\t\t\r\n\tconst changeWordToShow= () =>{\r\n\tfetch('https://random-word-api.herokuapp.com/word')\r\n\tfetch(url)\r\n\t.then((response) => {\r\n\t\t\r\n\t\treturn response.json();\r\n\t\t})\r\n\t.then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.length > 0) {\r\n\t\t\tfor(let word of data){\r\n\t\t\t\tsetWord(word)\r\n\t\t\t\t\r\n\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}).catch(err => {\r\n\t\t\r\n\t\tconsole.log(\"Error \" + err);\r\n\t});\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n        changeWordToShow();\r\n    }, []);\r\n\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Message />\r\n\t\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\t\r\n\t\t\t\t<div className='solution-length'>\r\n\t\t\t\t\tLength: {wordSolution.length}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t</>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t);\r\n//}\r\n\r\n\r\n\texport default App;*/\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport Message from './components/Message';\nimport Wordle from './components/Wordle';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wordSolution, setWord] = useState('');\n  var url = './data.json'; // Ensure the path is correct\n\n  const changeWordToShow = () => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n        console.log('hi');\n      }\n      return response.json();\n      console.log('screw this project');\n    }).then(data => {\n      console.log(data);\n      if (data.length > 0) {\n        setWord(data[0]); // Directly set the first word\n      }\n    }).catch(err => {\n      console.log(\"Error: \" + err);\n    });\n  };\n  useEffect(() => {\n    changeWordToShow();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), wordSolution && /*#__PURE__*/_jsxDEV(Wordle, {\n      wordSolution: wordSolution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"solution-length\",\n      children: [\"Length: \", wordSolution.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yiG8UJlVAiQV/tz49vVDbZsk9nE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Message","Wordle","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","wordSolution","setWord","url","changeWordToShow","fetch","then","response","ok","Error","console","log","json","data","length","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/zombi/Desktop/React Project/UnitProject/unitproject/src/App.js"],"sourcesContent":["/*import React, { useState,useEffect} from 'react'\r\nimport Navbar from './Navbar'\r\nimport Message from './components/Message'\r\nimport Wordle from './components/Wordle'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\t//wordSolution is the random solution for each game the user wants to play\r\n\tconst [wordSolution, setWord] = useState('')\r\n\t\r\n\tvar url = './data_folder/data.json'\r\n\t\t\r\n\tconst changeWordToShow= () =>{\r\n\tfetch('https://random-word-api.herokuapp.com/word')\r\n\tfetch(url)\r\n\t.then((response) => {\r\n\t\t\r\n\t\treturn response.json();\r\n\t\t})\r\n\t.then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.length > 0) {\r\n\t\t\tfor(let word of data){\r\n\t\t\t\tsetWord(word)\r\n\t\t\t\t\r\n\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}).catch(err => {\r\n\t\t\r\n\t\tconsole.log(\"Error \" + err);\r\n\t});\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n        changeWordToShow();\r\n    }, []);\r\n\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Message />\r\n\t\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\t\r\n\t\t\t\t<div className='solution-length'>\r\n\t\t\t\t\tLength: {wordSolution.length}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t</>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t);\r\n//}\r\n\r\n\r\n\texport default App;*/\r\n\t\r\n\timport React, { useState, useEffect } from 'react';\r\n\timport Navbar from './Navbar';\r\n\timport Message from './components/Message';\r\n\timport Wordle from './components/Wordle';\r\n\t\r\n\tfunction App() {\r\n\t  const [wordSolution, setWord] = useState('');\r\n\t  \r\n\t  var url = './data.json'; // Ensure the path is correct\r\n\t\r\n\t  const changeWordToShow = () => {\r\n\t\tfetch(url)\r\n\t\t  .then(response => {\r\n\t\t\t\r\n\t\t\tif (!response.ok) {\r\n\t\t\t  throw new Error('Network response was not ok');\r\n\t\t\t  console.log('hi')\r\n\t\t\t}\r\n\t\t\treturn response.json();\r\n\t\t\tconsole.log('screw this project')\r\n\t\t  })\r\n\t\t  .then(data => {\r\n\t\t\tconsole.log(data);\r\n\t\t\tif (data.length > 0) {\r\n\t\t\t  setWord(data[0]); // Directly set the first word\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch(err => {\r\n\t\t\tconsole.log(\"Error: \" + err);\r\n\t\t  });\r\n\t  };\r\n\t\r\n\t  useEffect(() => {\r\n\t\tchangeWordToShow();\r\n\t  }, []);\r\n\t\r\n\t  return (\r\n\t\t<>\r\n\t\t  <Navbar />\r\n\t\t  <Message />\r\n\t\t  {wordSolution && <Wordle wordSolution={wordSolution} />}\r\n\t\t  <div className='solution-length'>\r\n\t\t\tLength: {wordSolution.length}\r\n\t\t  </div>\r\n\t\t</>\r\n\t  );\r\n\t}\r\n\t\r\n\texport default App;\r\n\t\t  \r\n\t\r\n\r\n\r\n\t\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,IAAIa,GAAG,GAAG,aAAa,CAAC,CAAC;;EAEzB,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAChCC,KAAK,CAACF,GAAG,CAAC,CACPG,IAAI,CAACC,QAAQ,IAAI;MAEnB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC9CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACnB;MACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACtBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IAChC,CAAC,CAAC,CACDL,IAAI,CAACO,IAAI,IAAI;MACfH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QACnBZ,OAAO,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB;IACC,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;MACfN,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGK,GAAG,CAAC;IAC3B,CAAC,CAAC;EACH,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACjBa,gBAAgB,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACDR,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA,CAACJ,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzB,OAAA,CAACH,OAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACVpB,YAAY,iBAAIL,OAAA,CAACF,MAAM;MAACO,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDzB,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAL,QAAA,GAAC,UAC1B,EAAChB,YAAY,CAACa,MAAM;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA,eACN,CAAC;AAEJ;AAACrB,EAAA,CAzCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
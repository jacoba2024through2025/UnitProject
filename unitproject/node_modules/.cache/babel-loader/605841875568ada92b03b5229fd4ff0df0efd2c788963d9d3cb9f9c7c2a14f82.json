{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zombi\\\\Desktop\\\\React Project\\\\UnitProject\\\\unitproject\\\\src\\\\components\\\\Wordle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useGame from '../hooks/useGame';\nimport Grid from '../components/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle({\n  wordSolution\n}) {\n  _s();\n  const {\n    currentGuess,\n    handleKeyUp,\n    guesses,\n    isCorrect,\n    turn\n  } = useGame(wordSolution);\n\n  //listens for user input from their keyboard\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyUp);\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  }, [handleKeyUp]);\n  useEffect(() => {\n    console.log(guesses, turn, isCorrect);\n  }, [guesses, turn, isCorrect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        guesses: guesses,\n        wordLength: wordSolution.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current guess: \", currentGuess]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Wordle, \"qjk5I+3uF3wQcHU+dohWbGhau3Y=\", false, function () {\n  return [useGame];\n});\n_c = Wordle;\nvar _c;\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"names":["React","useEffect","useGame","Grid","jsxDEV","_jsxDEV","Wordle","wordSolution","_s","currentGuess","handleKeyUp","guesses","isCorrect","turn","window","addEventListener","removeEventListener","console","log","children","wordLength","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/zombi/Desktop/React Project/UnitProject/unitproject/src/components/Wordle.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport useGame from '../hooks/useGame'\r\nimport Grid from '../components/Grid'\r\n\r\n\r\nexport default function Wordle({ wordSolution }) {\r\n  const { currentGuess, handleKeyUp, guesses, isCorrect, turn } = useGame(wordSolution);\r\n\r\n  //listens for user input from their keyboard\r\n  useEffect(()=> {\r\n    window.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => window.removeEventListener('keyup', handleKeyUp)\r\n  }, [handleKeyUp]);\r\n\r\n  useEffect(()=> {\r\n    console.log(guesses, turn, isCorrect)\r\n  }, [guesses, turn, isCorrect])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Grid guesses={guesses} wordLength={wordSolution.length} />\r\n      </div>\r\n      <div>\r\n        Current guess: {currentGuess}\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,IAAI,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,eAAe,SAASC,MAAMA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM;IAAEC,YAAY;IAAEC,WAAW;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGX,OAAO,CAACK,YAAY,CAAC;;EAErF;EACAN,SAAS,CAAC,MAAK;IACba,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,WAAW,CAAC;IAE7C,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEN,WAAW,CAAC;EAC/D,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjBT,SAAS,CAAC,MAAK;IACbgB,OAAO,CAACC,GAAG,CAACP,OAAO,EAAEE,IAAI,EAAED,SAAS,CAAC;EACvC,CAAC,EAAE,CAACD,OAAO,EAAEE,IAAI,EAAED,SAAS,CAAC,CAAC;EAE9B,oBACEP,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,eACEd,OAAA,CAACF,IAAI;QAACQ,OAAO,EAAEA,OAAQ;QAACS,UAAU,EAAEb,YAAY,CAACc;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,eACNpB,OAAA;MAAAc,QAAA,GAAK,iBACY,EAACV,YAAY;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV;AAACjB,EAAA,CAzBuBF,MAAM;EAAA,QACoCJ,OAAO;AAAA;AAAAwB,EAAA,GADjDpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
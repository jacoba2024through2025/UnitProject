{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Allen\\\\Videos\\\\Unit 4 - Javascript\\\\React Project\\\\unitproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport Travel from './Travel';\nimport About from './About';\nimport Home from './Home';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [restaurants, setRestaurants] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchRestaurants() {\n      const url = 'https://tripadvisor16.p.rapidapi.com/api/v1/restaurant/searchRestaurants?locationId=304554';\n      const options = {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': 'e18de0a877msh37cee398e11727dp1c0067jsneddf36fa0509',\n          'x-rapidapi-host': 'tripadvisor16.p.rapidapi.com'\n        }\n      };\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json(); // Use json() if the response is in JSON format\n        setRestaurants(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchRestaurants();\n  }, []); // Empty dependency array means this runs once on mount\n\n  let component;\n  switch (window.location.pathname) {\n    case \"/\":\n      component = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/travel\":\n      component = /*#__PURE__*/_jsxDEV(Travel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this);\n      break;\n    case \"/about\":\n      component = /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this);\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), restaurants && component]\n  }, void 0, true);\n}\n_s(App, \"AHr1biYMubVNHCllUT+i7bIHBu0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","Travel","About","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","restaurants","setRestaurants","loading","setLoading","error","setError","fetchRestaurants","url","options","method","headers","response","fetch","ok","Error","result","json","message","component","window","location","pathname","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Jacob Allen/Videos/Unit 4 - Javascript/React Project/unitproject/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Navbar from './Navbar';\nimport Travel from './Travel';\nimport About from './About';\nimport Home from './Home';\n\nfunction App() {\n  const [restaurants, setRestaurants] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchRestaurants() {\n      const url = 'https://tripadvisor16.p.rapidapi.com/api/v1/restaurant/searchRestaurants?locationId=304554';\n      const options = {\n        method: 'GET',\n        headers: {\n          'x-rapidapi-key': 'e18de0a877msh37cee398e11727dp1c0067jsneddf36fa0509',\n          'x-rapidapi-host': 'tripadvisor16.p.rapidapi.com'\n        }\n      };\n\n      try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json(); // Use json() if the response is in JSON format\n        setRestaurants(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchRestaurants();\n  }, []); // Empty dependency array means this runs once on mount\n\n  let component;\n  switch (window.location.pathname) {\n    case \"/\":\n      component = <Home />;\n      break;\n    case \"/travel\":\n      component = <Travel />;\n      break;\n    case \"/about\":\n      component = <About />;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <Navbar />\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {restaurants && component}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,eAAekB,gBAAgBA,CAAA,EAAG;MAChC,MAAMC,GAAG,GAAG,4FAA4F;MACxG,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EAAE,oDAAoD;UACtE,iBAAiB,EAAE;QACrB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;QAC1C,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;QACtCf,cAAc,CAACc,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACa,OAAO,CAAC;MACzB,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEAG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIY,SAAS;EACb,QAAQC,MAAM,CAACC,QAAQ,CAACC,QAAQ;IAC9B,KAAK,GAAG;MACNH,SAAS,gBAAGvB,OAAA,CAACF,IAAI;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACpB;IACF,KAAK,SAAS;MACZP,SAAS,gBAAGvB,OAAA,CAACJ,MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACtB;IACF,KAAK,QAAQ;MACXP,SAAS,gBAAGvB,OAAA,CAACH,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACrB;IACF;MACE;EACJ;EAEA,oBACE9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACE/B,OAAA,CAACL,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTvB,OAAO,iBAAIP,OAAA;MAAA+B,QAAA,EAAG;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5BrB,KAAK,iBAAIT,OAAA;MAAA+B,QAAA,GAAG,SAAO,EAACtB,KAAK;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BzB,WAAW,IAAIkB,SAAS;EAAA,eACzB,CAAC;AAEP;AAACnB,EAAA,CAxDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState /*useEffect*/ } from 'react';\nimport Navbar from './Navbar';\nimport Message from './components/Message';\nimport Wordle from './components/Wordle';\nfunction App() {\n  _s();\n  //wordSolution is the random solution for each game the user wants to play\n  const [wordSolution, setWord] = useState('');\n  var url = './data_folder/data.json';\n\n  /*const changeWordToShow= () =>{\r\n  //fetch('https://random-word-api.herokuapp.com/word')*/\n  fetch(url).then(response => {\n    return response.json();\n  }).then(data => {\n    console.log(data);\n    if (data.length > 0) {\n      for (let word of data) {\n        setWord(word);\n        break;\n      }\n    }\n  }).catch(err => {\n    console.log(\"Error \" + err);\n  });\n}\n\n/*useEffect(() => {\r\n       changeWordToShow();\r\n   }, []);*/\n\n/*return (\r\n\t<>\r\n\t\t<Navbar />\r\n\t\t<Message />\r\n\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\r\n\t\t\t<div className='solution-length'>\r\n\t\t\t\tLength: {wordSolution.length}\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t</>\r\n\t\r\n\t\r\n\t\r\n\r\n\t\r\n);*/\n_s(App, \"bflliZk96JvHyqe1rMC9QxGLtyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Message","Wordle","App","_s","wordSolution","setWord","url","fetch","then","response","json","data","console","log","length","word","catch","err","_c","$RefreshReg$"],"sources":["C:/Users/zombi/Desktop/React Project/UnitProject/unitproject/src/App.js"],"sourcesContent":["import React, { useState, /*useEffect*/ } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Message from './components/Message'\r\nimport Wordle from './components/Wordle'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\t//wordSolution is the random solution for each game the user wants to play\r\n\tconst [wordSolution, setWord] = useState('')\r\n\t\r\n\tvar url = './data_folder/data.json'\r\n\t\t\r\n\t/*const changeWordToShow= () =>{\r\n\t//fetch('https://random-word-api.herokuapp.com/word')*/\r\n\tfetch(url)\r\n\t.then((response) => {\r\n\t\t\r\n\t\treturn response.json();\r\n\t\t})\r\n\t.then(data => {\r\n\t\tconsole.log(data)\r\n\t\tif (data.length > 0) {\r\n\t\t\tfor(let word of data){\r\n\t\t\t\tsetWord(word)\r\n\t\t\t\t\r\n\t\t\t\tbreak\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}).catch(err => {\r\n\t\t\r\n\t\tconsole.log(\"Error \" + err);\r\n\t});\r\n\t}\r\n\r\n\t\r\n\r\n\r\n\t/*useEffect(() => {\r\n        changeWordToShow();\r\n    }, []);*/\r\n\r\n\t\r\n\t\r\n\t/*return (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Message />\r\n\t\t\t{wordSolution && <Wordle wordSolution={wordSolution} /> }\r\n\t\t\t\r\n\t\t\t\t<div className='solution-length'>\r\n\t\t\t\t\tLength: {wordSolution.length}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t</>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t\r\n\t);*/\r\n\r\n\r\n\r\n\texport default App;\r\n\t\r\n\t  \r\n\t\r\n\r\n\r\n\t\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,CAAE,qBAAqB,OAAO;AACtD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AAKxC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,YAAY,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,IAAIQ,GAAG,GAAG,yBAAyB;;EAEnC;AACD;EACCC,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAAEC,QAAQ,IAAK;IAEnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EACtB,CAAC,CAAC,CACFF,IAAI,CAACG,IAAI,IAAI;IACbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;MACpB,KAAI,IAAIC,IAAI,IAAIJ,IAAI,EAAC;QACpBN,OAAO,CAACU,IAAI,CAAC;QAEb;MAED;IACD;EAGD,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;IAEfL,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGI,GAAG,CAAC;EAC5B,CAAC,CAAC;AACF;;AAKA;AACD;AACA;;AAIC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBCd,EAAA,CAxCQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAiEX,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}